import groovy.json.*

apply plugin: 'java'

sourceCompatibility = 14
targetCompatibility = 1.8

sourceSets.main {
    java.srcDir 'src'
    resources.srcDir 'assets'
}

repositories {
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
}

ext {
    def json = new JsonSlurper()
    def libs = "$rootDir/build/libs"
    def modfile = file("${sourceSets.main.resources.srcDirs.last()}/mod.json")

    mod = json.parseText(modfile.text)
    modName = mod['name']
    modMindustryVersion = mod['minGameVersion']
    modVersion = mod['version']

    artifactBaseName = modName + (!modVersion.isEmpty() ? "-$modVersion" : "")

    jarPath = "$libs/${artifactBaseName}-desktop.jar"
    dexPath = "$libs/${artifactBaseName}-android.jar"

    versions = [:]
    versions.mindustry = 'v' + modMindustryVersion
    versions.jabel = '0.3.0'
}

dependencies {
    compileOnly "com.github.Anuken.Arc:arc-core:$versions.mindustry"
    compileOnly "com.github.Anuken.Mindustry:core:$versions.mindustry"

    annotationProcessor "com.github.bsideup.jabel:jabel-javac-plugin:$versions.jabel"
}

task desktop(type: Jar) {
    archiveBaseName.set "$artifactBaseName-desktop"

    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task android(type: Exec, dependsOn: desktop) {
    def command = [
        'd8', jarPath,
        '--min-api', '28',
        '--output', dexPath
    ]

    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine("cmd", "/c", *command)
    } else {
        commandLine(*command)
    }
}

task dist(type: Jar, dependsOn: android) {
    archiveBaseName.set artifactBaseName

    from zipTree(jarPath), zipTree(dexPath)
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '--release', '8',
            '--enable-preview',
    ]

    options.compilerArgs << '-Xplugin:jabel'

    doFirst {
        options.compilerArgs = options.compilerArgs.findAll {
            it != '--enable-preview'
        }
    }
}
